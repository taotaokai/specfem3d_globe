#!/usr/bin/env python
# -*- coding: utf-8 -*-
""" Plot .nc files generated by xsem_slice_sphere
"""
import sys
import numpy as np
import gmt

#import matplotlib as mpl
#mpl.rcParams['font.family'] = "times new roman"
#mpl.use("pdf")
#import matplotlib.pyplot as plt
#from mpl_toolkits.basemap import Basemap

#====== utility functions

out_fig = "map.pdf"

#-- plot controls
# map plot

map_lat_center = 28
map_lon_center = 101.5
map_lat_min = 21
map_lat_max = 35
map_lon_min = 93
map_lon_max = 110
map_parallels = np.arange(0.,81,5.)
map_meridians = np.arange(0.,351,5.)

#fig = plt.figure(figsize=(8.5,11))
fig = gmt.Figure()
map_region = [map_lon_min, map_lon_max, map_lat_min, map_lat_max]
fig.basemap(region=map_region, projection="M6i", frame=True)
fig.coast(region=map_region, projection="M6i", W='fat,gray')
#relief = gmt.datasets.load_earth_relief(resolution="15s")
#fig.grdimage(relief, cmap="geo")
fig.grdimage("topo.grd", cmap="geo")
#sys.exit(-1)
#-- plot geological blocks 
block_line_file = 'zhangpz_block.txt'
block_lines = []
with open(block_line_file, 'r') as f:
  lon = []
  lat = []
  for l in f.readlines():
    if not l.startswith('>'):
      x = l.split()
      lon.append(float(x[0]))
      lat.append(float(x[1]))
    else:
      block_lines.append([lon, lat])
      lon = []
      lat = []
for l in block_lines:
  #x, y = m(l[0], l[1])
  #ax.plot(x, y, lw=0.2, color='gray')
  fig.plot(x=l[0], y=l[1], W="thick,gray")

#--- plot STATIONS
STATIONS_file = 'STATIONS'
with open(STATIONS_file, 'r') as f:
  lines = [ l.split() for l in f.readlines() if not l.startswith('#') ] 
  stla = np.array([float(l[2]) for l in lines])
  stlo = np.array([float(l[3]) for l in lines])

fig.plot(x=stlo, y=stla, S="t8p", G='blue', W='thin,black')
#x, y = m(stlo, stla)
#ax.plot(x, y, '^b', markersize=3)

#--- plot virtual sources 
STATIONS_file = 'STATIONS_select'
with open(STATIONS_file, 'r') as f:
  lines = [ l.split() for l in f.readlines() if not l.startswith('#') ] 
  stla = np.array([float(l[2]) for l in lines])
  stlo = np.array([float(l[3]) for l in lines])

fig.plot(x=stlo, y=stla, S="a16p", G='red', W='thin,black')

#------ save figure
#plt.show()
#fig.savefig(out_fig, format='pdf')
fig.savefig(out_fig)
#fig.show()